1、提倡wait  避免sleep
2、PageObjects设计模式  
	网页->类
	元素变量->变量
	用户交互->方法
3、selenium操作
	-8大定位方式
	-3大等待方式	
		-强制等待
		-隐士等待
		-显示等待
	-点击、用户输入等常见方式
	-窗口切换、文件上传
	
4、兼容性测试
	browserling
5、
	situation	面临什么情况
	task	有什么任务
	action	具体怎么做的
	result	做的结果如何
6、
	__name 	 双下划线 		私有变量   Python解释器将该变量改成了   _Student__name
	_name    	 单下划线  		外部可访问但约定不要访问
	__name__	 前后双下划线	特殊变量
11封装：将数据和操作组装到一起，对外只暴露出接口，通过接口访问对象
8继承：继承是一种创建类的方法，在python中，一个类可以继承来自一个或多个父类。原始类称为基类或超类
7多态：父类同一个方法，在继承的子类中表现出不同的形式
多重继承：通过多重继承，一个子类就可以获得多个父类的所有功能
多继承：一个子类可同时继承自多个父类

9、鸭子类型：函数接受的参数不会检查对象的类型，只要他拥有相同的被调用的方法，就可以正确的被调用
10、super
11、实例属性和类属性的区别
实例属性：归实例所有，会覆盖类属性，也可通过实例访问类属性
类属性：归类所有，实例属性不存在时会显示出类属性
给实例绑定方法：from types import MethodType   MethodType(method,ojb)
给类绑定方法：
12、
特殊变量：	__slots__ 限制实例的属性   __slots__=('name','age')
定制类：
__str__()、		打印实例
__repr__()  	 	直接显示实例变量
__iter__()		返回一个迭代对象
__next__()		调用该迭代对象
__getitem__()	
__setitem__()	把对象视作list或dict来对集合赋值
__delitem__()	用于删除某个元素
__getattr__()	动态返回一个属性，没有找到属性的情况下，才调用
__call__()			通过实例本身调用的方法 item.method()
13、装饰器 property
14、MixIn：不需要复杂而庞大的继承链，只要选择组合不同的类的功能，就可以快速构造出所需的子类
15.动态语言和静态语言最大的不同，就是函数和类的定义，不是编译时定义的，而是运行时动态创建的
16.metaclass：先定义metaclass，就可以创建类，最后创建实例。
创建类的3种方法：
a。定义类
b。type()		动态创建对象
c。metaclass	用于对象-关系映射
17.logging  日志打印到哪里去了
18.调试的几种方法
a.print（）
b.assert
c.logging
d.pdb/pdb.set_trace()	调试单步器/断点调试	启动Python的调试器pdb，让程序以单步方式运行，可以随时查看运行状态
19.文档测试
20.序列化：把变量从内存中变成可存储或传输的过程称之为序列化
反序列化：把变量内容从序列化的对象重新读到内存里
21.
多进程：实现多核任务可使用多进程，每个进程有各自独立的GIL锁
多线程：GIL:（Global Interpreter Lock）,python解释器自带GIL锁，无法实现多核任务。
	ThreadingLocal解决了参数在一个线程中各个函数之间相互传递的问题
异步IO：用单进程单线程模型来执行多任务
协程：单线程的异步编程模型称为协程，可以基于事件驱动编写高效的多任务程序
22.摘要算法:把任意长度的数据转换为一个长度固定的数据串（通常用16进制的字符串表示）
md5	hashlib
23.urllib伪装成浏览器		requests
24.charget	检测编码
25.
TCP  	安全
UDP	面向无连接的协议	传输速度快


